syntax = "proto3";
package reserve.psm.v1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "reserve/psm/v1/params.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/onomyprotocol/reserve/x/psm/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
  rpc AddStableCoinProposal(MsgAddStableCoin) returns (MsgAddStableCoinResponse);
  rpc UpdatesStableCoinProposal(MsgUpdatesStableCoin) returns (MsgUpdatesStableCoinResponse);
  rpc StableSwap(MsgStableSwap) returns (MsgStableSwapResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "reserve/x/psm/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}


message MsgAddStableCoin {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "reserve/x/psm/MsgAddStableCoin";

  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  string denom = 2;
  string symbol = 3;

  string address_pay_stable_init = 4 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  string amount_stable_init = 5 [
    (cosmos_proto.scalar)  = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];

  string limit_total = 6 [
    (cosmos_proto.scalar)  = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];

  string fee_in = 7 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false
  ];
  string fee_out = 8 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false
  ];
  int64 oracle_script = 9;
}

message MsgAddStableCoinResponse {}

message MsgUpdatesStableCoin {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "reserve/x/psm/MsgUpdatesStableCoin";

  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  string denom = 2;
  string symbol = 3;

  string limit_total = 4 [
    (cosmos_proto.scalar)  = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];

  string fee_in = 5 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false
  ];
  string fee_out = 6 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false
  ];

  int64 oracle_script = 7;
}

message MsgUpdatesStableCoinResponse {}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgStableSwap message.

message MsgStableSwap {
  option (cosmos.msg.v1.signer) = "address";

  string address = 1;
  string expected_denom = 2;
  cosmos.base.v1beta1.Coin offer_coin = 3
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];

}
message MsgStableSwapResponse {}
