syntax = "proto3";
package reserve.auction.v1;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "reserve/auction/v1/params.proto";
import "reserve/auction/v1/auction.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/onomyprotocol/reserve/x/auction/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/reserve/auction/params";
  }

  rpc QueryAllAuction(QueryAllAuctionRequest) returns (QueryAllAuctionResponse){
    option (google.api.http).get = "/reserve/auction/auction";
  }

  rpc QueryAllBids(QueryAllBidsRequest) returns (QueryAllBidsResponse){
    option (google.api.http).get = "/reserve/auction/bids";
  }

  rpc QueryAllBidderBids(QueryAllBidderBidsRequest) returns (QueryAllBidderBidsResponse){
    option (google.api.http).get = "/reserve/auction/bids/{bidder}";
  }

    rpc QueryAllBidsByAddress(QueryAllBidsByAddressRequest) returns (QueryAllBidsByAddressResponse){
    option (google.api.http).get = "/reserve/auction/bids";
  }

}


// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

message QueryAllAuctionRequest {}

message QueryAllAuctionResponse {
  // params holds all the parameters of this module.
  repeated Auction auctions = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}


message QueryAllBidsRequest {
  string auction_id = 1;
}

message QueryAllBidsResponse {
  // params holds all the parameters of this module.
  repeated Bid Bids = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

message QueryAllBidderBidsRequest {
  string bidder = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 auction_id = 2;
}

message QueryAllBidderBidsResponse {
  // params holds all the parameters of this module.
  repeated Bid Bids = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

message QueryAllBidsByAddressRequest {
  string bidder = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message QueryAllBidsByAddressResponse {
  // params holds all the parameters of this module.
  repeated Bid Bids = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}
