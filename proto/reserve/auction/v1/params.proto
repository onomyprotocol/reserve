syntax = "proto3";
package reserve.auction.v1;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/duration.proto";

option go_package = "github.com/onomyprotocol/reserve/x/auction/types";

// Params defines the parameters for the module.
message Params {
  option (amino.name) = "reserve/x/auction/Params";
  option (gogoproto.equal) = true;
  // defines how long (either in blocktime or blockheight)
  // between each auction
  google.protobuf.Duration auction_periods = 1 [
    (gogoproto.stdduration) = true,
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];

  // duration between each price reduction
  google.protobuf.Duration reduce_step = 2 [
    (gogoproto.stdduration) = true,
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];

  // rate compared with the collaterals price from the
  // oracle at which the auction will start with
  string starting_rate = 3 [ (cosmos_proto.scalar) = "cosmos.Dec" ];

  // rate compared with the initial price that the price
  // can drop to
  string lowest_rate = 4 [ (cosmos_proto.scalar) = "cosmos.Dec" ];

  // rate that are decrease every reduce_step
  string discount_rate = 5 [ (cosmos_proto.scalar) = "cosmos.Dec" ];
}