syntax = "proto3";
package reserve.vaults;

import "gogoproto/gogo.proto";
import "amino/amino.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/onomyprotocol/reserve/x/vaults/types";

// Params defines the parameters for the module.
message Params {
  option (amino.name) = "reserve/x/vaults/Params";
  option (gogoproto.equal) = true;

  string minting_fee = 1 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (amino.dont_omitempty) = true,
    (gogoproto.nullable) = false
  ];

  string stability_fee = 2 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (amino.dont_omitempty) = true,
    (gogoproto.nullable) = false
  ];

  string liquidation_penalty = 3 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (amino.dont_omitempty) = true,
    (gogoproto.nullable) = false
  ];

  string min_initial_debt = 4 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (amino.dont_omitempty) = true,
    (gogoproto.nullable) = false
  ];

  uint64 recalculate_debt_period = 5;
  uint64 liquidate_period = 6;

  string mint_denom = 7;
}

// VaultParams defines the parameters for each collateral vault type.
message VaultMamagerParams {
  string min_collateral_ratio = 1 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (amino.dont_omitempty) = true,
    (gogoproto.nullable) = false
  ];

  string liquidation_ratio = 2 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (amino.dont_omitempty) = true,
    (gogoproto.nullable) = false
  ];

  string max_debt = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (amino.dont_omitempty) = true,
    (gogoproto.nullable) = false
  ];
}

// VaultMamager defines the manager of each collateral vault type.
message VaultMamager {
  VaultMamagerParams params = 1
      [ (amino.dont_omitempty) = true, (gogoproto.nullable) = false ];

  string denom = 2;

  string mint_available = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (amino.dont_omitempty) = true,
    (gogoproto.nullable) = false
  ];
}

// VaultStatus is the status of a vault.
enum VaultStatus {
  option (gogoproto.goproto_enum_prefix) = false;

  // ACTIVE - vault is in use and can be changed
  ACTIVE = 0 [ (gogoproto.enumvalue_customname) = "ACTIVE" ];
  // LIQUIDATING - vault is being liquidated by the vault manager, and cannot be
  // changed by the user. If liquidation fails, vaults may remain in this state.
  // An upgrade might be able to recover them.
  LIQUIDATING = 1 [ (gogoproto.enumvalue_customname) = "LIQUIDATING" ];
  // TRANSFER - vault is able to be transferred (payments and debits frozen
  // until it has a new owner)
  TRANSFER = 2 [ (gogoproto.enumvalue_customname) = "TRANSFER" ];
  // CLOSED - vault was closed by the user and all assets have been paid out
  CLOSED = 3 [ (gogoproto.enumvalue_customname) = "CLOSED" ];
  // LIQUIDATED - vault was closed by the manager, with remaining assets paid to
  // owner
  LIQUIDATED = 4 [ (gogoproto.enumvalue_customname) = "LIQUIDATED" ];
}

message Vault {
  uint64 id = 1;
  string owner = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  cosmos.base.v1beta1.Coin debt = 3
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];

  cosmos.base.v1beta1.Coin collateral_locked = 4
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];

  VaultStatus status = 5;
}

message VaultLiquidationStatus {
  cosmos.base.v1beta1.Coin sold = 4
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
  
  cosmos.base.v1beta1.Coin remain_collateral = 5
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

message Liquidation {
  string denom = 1;

  string mark_price = 2 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (amino.dont_omitempty) = true,
    (gogoproto.nullable) = false
  ];

  repeated Vault liquidating_vaults = 3;

  map<uint64, VaultLiquidationStatus> vault_liquidation_status = 4;
}